{"ast":null,"code":"import _slicedToArray from\"/Users/viveksharma/ReactProjects/text-utils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import logo from\"./logo.svg\";import\"./App.css\";import Navbar from\"./components/Navbar\";import TextForm from\"./components/TextForm\";import About from\"./components/About\";import{useState}from\"react\";import Alert from\"./components/Alert\";import{BrowserRouter as Router,Switch,Route}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){var _useState=useState(\"light\"),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];// whether dark mode is enabled or not\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];var showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1500);};var toggleMode=function toggleMode(){if(mode===\"light\"){setMode(\"dark\");document.body.style.backgroundColor=\"#042743\";showAlert(\"Dark mode has been enabled\",\"success\");document.title=\"TextUtils - Dark Mode\";// setInterval(()=>{\n// document.title = \"TextUtils is amazing\";\n// },2000);\n// setInterval(()=>{\n// document.title = \"Install TextUtils now\";\n// },1000)\n}else{setMode(\"light\");document.body.style.backgroundColor=\"white\";showAlert(\"Light mode has been enabled\",\"success\");document.title=\"TextUtils - Light Mode\";}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",aboutText:\"About\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-5\",children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",children:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter the text to analyze below\",mode:mode,showAlert:showAlert})})]})})]})});}export default App;","map":{"version":3,"names":["logo","Navbar","TextForm","About","useState","Alert","BrowserRouter","Router","Switch","Route","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","title"],"sources":["/Users/viveksharma/ReactProjects/text-utils/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport About from \"./components/About\";\nimport { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n\n      // setInterval(()=>{\n      // document.title = \"TextUtils is amazing\";\n\n      // },2000);\n      // setInterval(()=>{\n      // document.title = \"Install TextUtils now\";\n      // },1000)\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          aboutText=\"About\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-5\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n\n            <Route exact path=\"/\">\n              <TextForm\n                heading={\"Enter the text to analyze below\"}\n                mode={mode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </Switch>\n\n          {/* <About /> */}\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"iIAAA,MAAOA,KAAP,KAAiB,YAAjB,CACA,MAAO,WAAP,CACA,MAAOC,OAAP,KAAmB,qBAAnB,CACA,MAAOC,SAAP,KAAqB,uBAArB,CACA,MAAOC,MAAP,KAAkB,oBAAlB,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,MAAP,KAAkB,oBAAlB,CACA,OAASC,aAAa,GAAIC,OAA1B,CAAkCC,MAAlC,CAA0CC,KAA1C,KAAuD,kBAAvD,C,6IACA,QAASC,IAAT,EAAe,CACb,cAAwBN,QAAQ,CAAC,OAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eAA2C;AAC3C,eAA0BR,QAAQ,CAAC,IAAD,CAAlC,yCAAOS,KAAP,eAAcC,QAAd,eAEA,GAAMC,UAAS,CAAG,QAAZA,UAAY,CAACC,OAAD,CAAUC,IAAV,CAAmB,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OADE,CAEPC,IAAI,CAAEA,IAFC,CAAD,CAAR,CAIAE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAD,CAAR,CACD,CAFS,CAEP,IAFO,CAAV,CAGD,CARD,CASA,GAAMM,WAAU,CAAG,QAAbA,WAAa,EAAM,CACvB,GAAIT,IAAI,GAAK,OAAb,CAAsB,CACpBC,OAAO,CAAC,MAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,SAAtC,CACAT,SAAS,CAAC,4BAAD,CAA+B,SAA/B,CAAT,CACAM,QAAQ,CAACI,KAAT,CAAiB,uBAAjB,CAEA;AACA;AAEA;AACA;AACA;AACA;AACD,CAbD,IAaO,CACLb,OAAO,CAAC,OAAD,CAAP,CACAS,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,CAAsC,OAAtC,CACAT,SAAS,CAAC,6BAAD,CAAgC,SAAhC,CAAT,CACAM,QAAQ,CAACI,KAAT,CAAiB,wBAAjB,CACD,CACF,CApBD,CAqBA,mBACE,sCACE,MAAC,MAAD,yBACE,KAAC,MAAD,EACE,KAAK,CAAC,WADR,CAEE,SAAS,CAAC,OAFZ,CAGE,IAAI,CAAEd,IAHR,CAIE,UAAU,CAAES,UAJd,EADF,cAOE,KAAC,KAAD,EAAO,KAAK,CAAEP,KAAd,EAPF,cAQE,YAAK,SAAS,CAAC,gBAAf,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,uBACE,KAAC,KAAD,IADF,EADF,cAKE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,GAAlB,uBACE,KAAC,QAAD,EACE,OAAO,CAAE,iCADX,CAEE,IAAI,CAAEF,IAFR,CAGE,SAAS,CAAEI,SAHb,EADF,EALF,GADF,EARF,GADF,EADF,CA8BD,CAED,cAAeL,IAAf"},"metadata":{},"sourceType":"module"}